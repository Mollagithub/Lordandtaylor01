<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="PaxoTechWin7X64" name="Oprea" tests="9" failures="0" timestamp="28 Sep 2015 18:32:21 GMT" time="0.23" errors="0">
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable must be set by the webdriver.opera.driver system property; for more information, see https://github.com/operasoftware/operachromiumdriver. The latest version can be downloaded from https://github.com/operasoftware/operachromiumdriver/releases">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.opera.driver system property; for more information, see https://github.com/operasoftware/operachromiumdriver. The latest version can be downloaded from https://github.com/operasoftware/operachromiumdriver/releases
	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:110)
	at org.openqa.selenium.opera.OperaDriverService.access$000(OperaDriverService.java:32)
	at org.openqa.selenium.opera.OperaDriverService$Builder.findDefaultExecutable(OperaDriverService.java:118)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:291)
	at org.openqa.selenium.opera.OperaDriverService.createDefaultService(OperaDriverService.java:82)
	at org.openqa.selenium.opera.OperaDriver.<init>(OperaDriver.java:139)
	at com.paxotech.qa.lord.ScriptBasemutliBrowser.beforeMethod(ScriptBasemutliBrowser.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:585)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:391)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="SmSAlart" time="0.001" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- SmSAlart -->
  <testcase name="boundaryInfo" time="0.001" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- boundaryInfo -->
  <testcase name="emtyInfologin" time="0.005" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- emtyInfologin -->
  <testcase name="invalidEmailAddforReg" time="0.001" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- invalidEmailAddforReg -->
  <testcase name="invalidRegistration" time="0.002" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- invalidRegistration -->
  <testcase name="invlaidUerLogin" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- invlaidUerLogin -->
  <testcase name="newMemberRegistration" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- newMemberRegistration -->
  <testcase name="verifyhomepagefaunctionality" time="0.001" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- verifyhomepagefaunctionality -->
  <testcase name="vlaidUerLogin" time="0.0" classname="com.lordandTaylor.testsripts.LoginBaseFanctionality">
    <skipped/>
  </testcase> <!-- vlaidUerLogin -->
</testsuite> <!-- Oprea -->
